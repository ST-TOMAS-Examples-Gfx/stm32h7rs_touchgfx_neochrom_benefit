/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    add(image1);

    image2.setXY(0, 0);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_800X480_PUZZLE_ID));
    add(image2);

    textureMapper1.setXY(345, 0);
    textureMapper1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_LOGOS_TOUCHGFX_GRADIENT_SMOOTH_ID));
    textureMapper1.setWidth(455);
    textureMapper1.setHeight(480);
    textureMapper1.setBitmapPosition(151.5f, 164.0f);
    textureMapper1.setScale(2.7f);
    textureMapper1.setCameraDistance(1000.0f);
    textureMapper1.setOrigo(227.5f, 240.0f, 1000.0f);
    textureMapper1.setCamera(227.5f, 240.0f);
    textureMapper1.setAngles(0.0f, 0.0f, 0.0f);
    textureMapper1.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);
    add(textureMapper1);

    textureMapper2.setXY(0, 0);
    textureMapper2.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_LOGOS_TOUCHGFX_GRADIENT_SMOOTH_ID));
    textureMapper2.setWidth(345);
    textureMapper2.setHeight(355);
    textureMapper2.setBitmapPosition(96.5f, 101.5f);
    textureMapper2.setScale(2.0f);
    textureMapper2.setCameraDistance(1000.0f);
    textureMapper2.setOrigo(172.5f, 177.5f, 1000.0f);
    textureMapper2.setCamera(172.5f, 177.5f);
    textureMapper2.setAngles(0.0f, 0.0f, 0.0f);
    textureMapper2.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);
    add(textureMapper2);

    toggleButton1.setXY(111, 386);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_TEXT_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_TEXT_OFF_NORMAL_ID));
    toggleButton1.setAction(buttonCallback);
    add(toggleButton1);
}

Screen1ViewBase::~Screen1ViewBase()
{

}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
    {
        //Interaction3
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        static uint8_t b_NeoChromEnabled = 1;
          if (b_NeoChromEnabled)
          {
            b_NeoChromEnabled = 0;
             // function natively in TouchGFX for STM32H7RS
            ((TouchGFXHAL*)touchgfx::HAL::getInstance())->activateNeoChrom(false); 
          }
          else
          {
            b_NeoChromEnabled = 1;
            // function natively in TouchGFX for STM32H7RS
            ((TouchGFXHAL*)touchgfx::HAL::getInstance())->activateNeoChrom(true); 
          }
        #endif /*SIMULATOR*/
    }
}

void Screen1ViewBase::handleTickEvent()
{
    //Interaction1
    //When every N tick rotate textureMapper1
    //Rotate textureMapper1
    textureMapper1.updateAngles(textureMapper1.getXAngle() + 0.000f, textureMapper1.getYAngle() + 0.000f, textureMapper1.getZAngle() + 0.100f);

    //Interaction2
    //When every N tick rotate textureMapper2
    //Rotate textureMapper2
    textureMapper2.updateAngles(textureMapper2.getXAngle() + 0.000f, textureMapper2.getYAngle() + 0.000f, textureMapper2.getZAngle() + -0.100f);
}
